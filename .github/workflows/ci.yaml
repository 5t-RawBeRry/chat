name: compile

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '.idea/**'
      - '!.github/workflows/**'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            cross: true
            un-upx: true
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
            un-upx: true
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Cache target directory
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-${{ matrix.target }}-

      - name: Set up Cross
        if: matrix.cross == false
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          override: true

      - name: Install OpenSSL
        if: matrix.os != 'windows-latest' && matrix.cross == false
        run: |
          sudo apt-get install -y libssl-dev musl-tools || brew install openssl

      - name: Build
        if: matrix.cross == false
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build for Cross
        if: matrix.cross == true
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly
          cargo install cross
          cross build --release --target ${{ matrix.target }}

      - name: Install UPX
        if: matrix.un-upx == false
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            choco install upx
          else
            sudo apt-get install -y upx || brew install upx
          fi
        shell: bash

      - name: Compress Executables
        if: matrix.un-upx == false
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            upx target/${{ matrix.target }}/release/chat.exe
          else
            upx target/${{ matrix.target }}/release/chat
          fi
        shell: bash

      - name: Create Artifact Directory
        run: |
          mkdir chat
          if [ "${{ runner.os }}" = "Windows" ]; then
            cp target/${{ matrix.target }}/release/chat.exe chat/chat.exe
          else
            cp target/${{ matrix.target }}/release/chat chat/chat
          fi
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: chat_${{ matrix.target }}_nightly
          path: chat/*
